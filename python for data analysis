# -*- coding: utf-8 -*-
"""
Created on Fri Jul 04 09:41:40 2014

@author: Administrator
"""

import json
import numpy as np
from pandas import DataFrame, Series
import pandas as pd



def get_counts(sequence):
    '''统计时区出现的次数'''
    counts={}
    for x in sequence:
        if x in counts:
            counts[x]+=1
        else:
            counts[x]=1
    return counts
    
def top_counts(count_dict,n=10):
    '''统计时区前n的的时区'''
    value_key_pairs=[(count,tz) for tz,count in count_dict.items()]
    value_key_pairs.sort()
    return value_key_pairs[-n:]
    
    
path='C:\\python_test\\pydata-book-master\\ch02\\usagov_bitly_data2012-03-16-1331923249.txt'
filetext=open(path).readline()
print filetext

records=[json.loads(line) for line in open(path)]


time_zones=[rec['tz'] for rec in records if 'tz' in rec]
time_zones[:10]
counts=get_counts(time_zones)
#print counts['America/New_York']
#print top_counts(counts)

frame=DataFrame(records) #数据类型的转换 由records是字典型的list 转换为Frame格式
tz_counts=frame['tz'].value_counts() #DataFrame的自带统计个数
#print tz_counts[:10]  #输出 属性是tz的前10个记录
# tz_counts[:10].plot(kind='barh',rot=0) #画图前10个柱形图

results=Series([x.split()[0] for x in frame.a.dropna()])
#results[:5]
#results.value_counts()[:10] #输出前10的统计结果

cframe=frame[frame.a.notnull()]
operating_system=np.where(cframe['a'].str.contains("Windows"),'Windows','Not Windows')
by_tz_os=cframe.groupby(['tz',operating_system])
agg_counts=by_tz_os.size().unstack().fillna(0)
indexer=agg_counts.sum(1).argsort()
count_subset=agg_counts.take(indexer)[-10:]
#count_subset.plot(kind='barh',stacked=True) #画图
normed_subset=count_subset.div(count_subset.sum(1),axis=0)
# normed_subset.plot(kind='barh',stacked=True) # 归一化图像

